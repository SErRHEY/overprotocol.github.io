"use strict";(self.webpackChunkover_docs=self.webpackChunkover_docs||[]).push([[633],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),l=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),h=n,f=u["".concat(s,".").concat(h)]||u[h]||d[h]||a;return r?o.createElement(f,i(i({ref:t},p),{},{components:r})):o.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:n,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6018:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=r(7462),n=(r(7294),r(3905));const a={title:"How can I restore my Account?",description:"Guide to restoring an expired account",lang:"en"},i=void 0,c={unversionedId:"developers/how-can-i-restore-my-account",id:"developers/how-can-i-restore-my-account",title:"How can I restore my Account?",description:"Guide to restoring an expired account",source:"@site/docs/developers/how-can-i-restore-my-account.md",sourceDirName:"developers",slug:"/developers/how-can-i-restore-my-account",permalink:"/developers/how-can-i-restore-my-account",draft:!1,editUrl:"https://github.com/overprotocol/overprotocol.github.io/edit/develop/docs/developers/how-can-i-restore-my-account.md",tags:[],version:"current",frontMatter:{title:"How can I restore my Account?",description:"Guide to restoring an expired account",lang:"en"},sidebar:"developersSidebar",previous:{title:"Developer Tools",permalink:"/developers/build-your-contract/developer-tools"},next:{title:"Client APIs",permalink:"/developers/client-apis"}},s={},l=[{value:"Restore Data",id:"restore-data",level:3}],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"To restore your account which was swept away to the nether layer, you need to send a restore data to the restore server. "),(0,n.kt)("h3",{id:"restore-data"},"Restore Data"),(0,n.kt)("p",null,"A valid restore data should include the following fields."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ChainID - To prevent attacks across different networks"),(0,n.kt)("li",{parentName:"ul"},"Target - Address of the target account to restore"),(0,n.kt)("li",{parentName:"ul"},"SourceEpoch - The current ",(0,n.kt)("inlineCode",{parentName:"li"},"epochCoverage")," of the target account. This field should be set to the default ",(0,n.kt)("inlineCode",{parentName:"li"},"epochCoverage")," which is ",(0,n.kt)("inlineCode",{parentName:"li"},"current epoch -1")," if the account is not currently existent."),(0,n.kt)("li",{parentName:"ul"},"TargetEpoch - Target epoch to restore the account."),(0,n.kt)("li",{parentName:"ul"},"Fee - Fee to pay the fee recipient."),(0,n.kt)("li",{parentName:"ul"},"FeeRecipient - Account the pay the restore fee, typically the owner account of the restore server")),(0,n.kt)("p",null,"In order to construct your restore data, you should retrieve the proper ",(0,n.kt)("inlineCode",{parentName:"p"},"Fee")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"FeeRecipient")," by sending a http request to the store server you will use. Typically the restore server will provide this through http request named something like ",(0,n.kt)("inlineCode",{parentName:"p"},"minimumFee")," for fee information and ",(0,n.kt)("inlineCode",{parentName:"p"},"feeRecipient")," for fee recipient. Your request will look something like this."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'curl -X GET "http://hostAddress:hostPort/minimumFee"\ncurl -X GET "http://hostAddress:hostPort/feeRecipient"\n')),(0,n.kt)("p",null,"Now before sending this restore data, you have to sign it. There are multiple reasons for this procedure, but the most important reason is so the restore server can\u2019t manipulate the restoration fee. You can sign the restore data by using the ",(0,n.kt)("inlineCode",{parentName:"p"},"SignRestoreData")," function in the ",(0,n.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/ethereum/go-ethereum/core/types"},"types")," package. "),(0,n.kt)("p",null,"After making a valid restore data and signing it, you can send the restore data through ",(0,n.kt)("inlineCode",{parentName:"p"},"requestRestoration")," http post method. The request should look something like this."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'curl -H \'Content-Type: application/json\' \\\n-X POST "http://localhost:32311/requestRestoration" \\\n--data \'{"chainId": "0x84442", \n"target": "0x1923f626bb8dc025849e00f99c25fe2b2f7fb0db", \n"sourceEpoch": "0x10",\n"targetEpoch": "0x5",\n"fee": "0x100",\n"feeRecipient": "0x07a565b7ed7d7a678680a4c162885bedbb695fe0",\n"v": "0x26",\n"r": "0x223a7c9bcf5531c99be5ea7082183816eb20cfe0bbc322e97cc5c7f71ab8b20e",\n"s": "0x2aadee6b34b45bb15bc42d9c09de4a6754e7000908da72d48cc7704971491663"\n}\'\n')),(0,n.kt)("p",null,"After the restore server validate the restore data and check if the fee is profitable, it will send the restore create the corresponding restoration proof and send a restoration transaction to restore your account."),(0,n.kt)("p",null,"We are currently working on a more user friendly interface for signing and sending restore data. Until then, please use the solution above."))}d.isMDXComponent=!0}}]);